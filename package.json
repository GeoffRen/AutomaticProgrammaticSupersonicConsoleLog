{
	"name": "automaticprogrammaticsupersonicconsolelog",
	"displayName": "AutomaticProgrammaticSupersonicConsoleLog",
	"description": "This extension allows you to AUTOMATICALLY/PROGRAMMATICALLY insert meaningful log messages into your code at SUPERSONIC speeds. Supports log messages in every language conceivable.",
	"version": "0.0.1",
	"engines": {
		"vscode": "^1.47.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:automaticprogrammaticsupersonicconsolelog.insertLogMessage",
		"onCommand:automaticprogrammaticsupersonicconsolelog.insertLogMessageBelow"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": {
			"title": "Automatic Programmatic Supersonic Console Log",
			"properties": {
				"automaticProgrammaticSupersonicConsoleLog.quote": {
					"type": "string",
					"enum": [
						"\"",
						"'",
						"`"
					],
					"default": "'",
					"description": "What type of quotes should be used in the logs."
				},
				"automaticProgrammaticSupersonicConsoleLog.languageSettings": {
					"type": "array",
					"default": [
						{
							"fileExtension": "cs",
							"logFormat": "Console.WriteLine(\"LABEL\" + TEXT);"
						},
						{
							"fileExtension": "java",
							"logFormat": "System.out.println(\"LABEL\" + TEXT);"
						},
						{
							"fileExtension": "js",
							"logFormat": "console.log('LABEL' + TEXT);"
						},
						{
							"fileExtension": "ts",
							"logFormat": "console.log('LABEL' + TEXT);"
						},
						{
							"fileExtension": "py",
							"logFormat": "print(\"LABEL\" + TEXT)"
						}
					],
					"description": "Describes the format of the logs in different programming languages."
				}
			}
		},
		"commands": [
			{
				"command": "automaticprogrammaticsupersonicconsolelog.insertLogMessage",
				"title": "Automatic Programmatic Supersonic Console Log: Insert Log Message"
			},
			{
				"command": "automaticprogrammaticsupersonicconsolelog.insertLogMessageBelow",
				"title": "Automatic Programmatic Supersonic Console Log: Insert Log Message Directly Below"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.2",
		"@types/node": "^13.11.0",
		"@types/vscode": "^1.47.0",
		"@typescript-eslint/eslint-plugin": "^2.30.0",
		"@typescript-eslint/parser": "^2.30.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.1.2",
		"tslint": "^6.1.2",
		"typescript": "^3.8.3",
		"vscode-test": "^1.3.0"
	}
}